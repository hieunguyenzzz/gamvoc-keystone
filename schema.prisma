// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id               String    @id @default(cuid())
  name             String    @default("")
  email            String    @unique @default("")
  password         String
  avatar_filesize  Int?
  avatar_extension String?
  avatar_width     Int?
  avatar_height    Int?
  avatar_id        String?
  isAdmin          Boolean   @default(false)
  status           String?   @default("active")
  createdAt        DateTime? @default(now())
  updatedAt        DateTime? @default(now()) @updatedAt
  posts            Post[]    @relation("Post_author")
  pages            Page[]    @relation("Page_author")
}

model Post {
  id             String    @id @default(cuid())
  title          String    @default("")
  slug           String    @unique @default("")
  brief          String    @default("")
  content        String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  image          Image?    @relation("Post_image", fields: [imageId], references: [id])
  imageId        String?   @map("image")
  status         String?   @default("draft")
  commentStatus  String?   @default("closed")
  order          Int?      @default(-1)
  seoTitle       String    @default("")
  seoDescription String    @default("")
  seoKeywords    String    @default("")
  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @default(now()) @updatedAt
  publishDate    DateTime? @default(now())
  viewsCount     Int?      @default(0)
  commentCount   Int?      @default(0)
  author         User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId       String?   @map("author")
  category       Category? @relation("Post_category", fields: [categoryId], references: [id])
  categoryId     String?   @map("category")
  tags           Tag[]     @relation("Post_tags")

  @@index([imageId])
  @@index([order])
  @@index([authorId])
  @@index([categoryId])
}

model Page {
  id             String    @id @default(cuid())
  title          String    @default("")
  slug           String    @unique @default("")
  content        String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  image          Image?    @relation("Page_image", fields: [imageId], references: [id])
  imageId        String?   @map("image")
  status         String?   @default("draft")
  order          Int?      @default(-1)
  seoTitle       String    @default("")
  seoDescription String    @default("")
  seoKeywords    String    @default("")
  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @default(now()) @updatedAt
  viewsCount     Int?      @default(0)
  author         User?     @relation("Page_author", fields: [authorId], references: [id])
  authorId       String?   @map("author")

  @@index([imageId])
  @@index([order])
  @@index([authorId])
}

model Category {
  id             String    @id @default(cuid())
  name           String    @default("")
  slug           String    @unique @default("")
  description    String    @default("")
  image          Image?    @relation("Category_image", fields: [imageId], references: [id])
  imageId        String?   @map("image")
  status         String?   @default("draft")
  order          Int?      @default(-1)
  seoTitle       String    @default("")
  seoDescription String    @default("")
  seoKeywords    String    @default("")
  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @default(now()) @updatedAt
  posts          Post[]    @relation("Post_category")
  tags           Tag[]     @relation("Tag_category")

  @@index([imageId])
  @@index([order])
}

model Tag {
  id         String    @id @default(cuid())
  name       String    @default("")
  slug       String    @unique @default("")
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now()) @updatedAt
  category   Category? @relation("Tag_category", fields: [categoryId], references: [id])
  categoryId String?   @map("category")
  posts      Post[]    @relation("Post_tags")

  @@index([categoryId])
}

model Image {
  id                  String     @id @default(cuid())
  name                String     @default("")
  type                String     @default("")
  filename            String?    @unique
  altText             String     @default("")
  image_filesize      Int?
  image_extension     String?
  image_width         Int?
  image_height        Int?
  image_id            String?
  from_Post_image     Post[]     @relation("Post_image")
  from_Page_image     Page[]     @relation("Page_image")
  from_Category_image Category[] @relation("Category_image")
}